application = require('application')

application.module 'PersonModule', (PersonModule, App, Backbone, Marionette, $, _) ->
  @startWithParent = false
  PersonModule.Controller =

      PersonModule: =>
        console.log "makePersonModule"
        PersonModule.putPersonGraph()
        return
      Location: =>
        application.ViewController.network()
        
        


      # write methods
      # # getAllNodes
      # # getNodesBy(name, value)

  class PersonModule.Router extends Marionette.AppRouter
    appRoutes:
      "PersonModule" : "PersonModule"
      'location' : 'Location'

  API = 

    PersonModule: () ->
      PersonModule.Controller.PersonModule()   

    Location: () ->
      application.vent.trigger "network"
      

  PersonModule.addInitializer ->
    new PersonModule.Router
      controller: API 
  PersonModule.addInitializer ->

  # The context of the function is also the module itself
  this == PersonModule

  # => true
  # Private Data And Functions
  # --------------------------
  myData = 'this is private data'

  # Public Data And Functions
  # -------------------------
  PersonModule.someData = 'public data'

  PersonModule.makePersonModule = () ->
    console.log "makePersonModule"

  PersonModule.putPersonGraph= () ->
    module.exports = class PersonView extends Backbone.Marionette.LayoutView
          template: 'views/templates/person'
          id: 'person-graph'
          el: '#person-graph'
          # ui: 'switch-person' : '#person-graph'
          # triggers: 'click @ui.switch-person' : 'switch-person:do:view'
          # regions:
          #   person: "#person-graph"
        initialize: ->

        onShow: ->
            # $(document).ready =>
              

            #d3 code mainly from http://bl.ocks.org/mbostock/4062045 and http://bl.ocks.org/mbostock/2706022
            
      # ---
      # generated by js2coffee 2.0.1
            @on "switch-person:do:view", =>
            console.log "switch-person trigger"
            # @biosView = new BiosView()      
            # @regionBios.show(@biosView)
            # @orgGraphView = new OrgGraphView()
            # @regionGraph.show(@orgGraphView)
            # application.GraphModule.Controller.makeOrgGraph()
    
    console.log @
    console.log PersonModule
    application.module("GraphModule").stop()
    # application.layout.remove(application.GraphView)
    application.layout.content.empty()
    $("#biotraj-graph").remove()
    $("#content").html("")
    $("#content").append "<div id='person-graph'></div>"
    # console.log personView
    @layout = new PersonView()
    console.log application
    # application.layout.header.show("headerView")
    PersonModule.layout.render()

    


  